{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2022-05-03T14:07:06.934Z",
    "end": "2022-05-03T14:08:42.545Z",
    "duration": 95611,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5a674283-9fc6-4adc-80f3-4da515628b5b",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "15d8d628-d65e-4555-914f-ac4e6a6c1d9f",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 518,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "8cb4bf50-2524-4389-900a-7b6f466d2c9f",
              "parentUUID": "15d8d628-d65e-4555-914f-ac4e6a6c1d9f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8cb4bf50-2524-4389-900a-7b6f466d2c9f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 518,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8bfad120-be95-4fcc-829b-945185bf4f5d",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 347,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "f2bdd4aa-e717-48ab-a09c-c1f6841452d6",
              "parentUUID": "8bfad120-be95-4fcc-829b-945185bf4f5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 444,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "284fd4d9-535d-4ac2-b4ae-5b821eb3b068",
              "parentUUID": "8bfad120-be95-4fcc-829b-945185bf4f5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 453,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "806048c6-3c57-47e6-8f7e-c2121be4e208",
              "parentUUID": "8bfad120-be95-4fcc-829b-945185bf4f5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 414,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "d946eab1-510f-4c5b-9509-ede0b69b4804",
              "parentUUID": "8bfad120-be95-4fcc-829b-945185bf4f5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 209,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "e219b06c-b8cf-410c-a547-edc31f6aa486",
              "parentUUID": "8bfad120-be95-4fcc-829b-945185bf4f5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 247,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "6b36d861-f8a6-4282-a57e-9bf2dfcbba2b",
              "parentUUID": "8bfad120-be95-4fcc-829b-945185bf4f5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 152,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "bec03fa4-51f4-4441-a9a1-c75a8403e05f",
              "parentUUID": "8bfad120-be95-4fcc-829b-945185bf4f5d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f2bdd4aa-e717-48ab-a09c-c1f6841452d6",
            "284fd4d9-535d-4ac2-b4ae-5b821eb3b068",
            "806048c6-3c57-47e6-8f7e-c2121be4e208",
            "d946eab1-510f-4c5b-9509-ede0b69b4804",
            "e219b06c-b8cf-410c-a547-edc31f6aa486",
            "6b36d861-f8a6-4282-a57e-9bf2dfcbba2b",
            "bec03fa4-51f4-4441-a9a1-c75a8403e05f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2266,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "764b4b26-983f-4b44-86b4-349c9c1b49a7",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 202,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "2106c3b3-238d-4cfb-a15e-723b1bb66c35",
              "parentUUID": "764b4b26-983f-4b44-86b4-349c9c1b49a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 387,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "df3ab261-5cb6-48a0-b4d9-406ef242097d",
              "parentUUID": "764b4b26-983f-4b44-86b4-349c9c1b49a7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2106c3b3-238d-4cfb-a15e-723b1bb66c35",
            "df3ab261-5cb6-48a0-b4d9-406ef242097d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 589,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b6cf63d3-8097-4960-a9c8-554acb65bc73",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 227,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "ab301918-2f86-44db-a1f1-e60ab408a5bf",
              "parentUUID": "b6cf63d3-8097-4960-a9c8-554acb65bc73",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 215,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "f6f0cdc7-96d9-4e21-bb40-cf0fa7cded5a",
              "parentUUID": "b6cf63d3-8097-4960-a9c8-554acb65bc73",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 415,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "9df67c8b-a81e-42da-b679-b8c22e00722b",
              "parentUUID": "b6cf63d3-8097-4960-a9c8-554acb65bc73",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 243,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "9d209a21-7ff6-4710-977d-4c58f91bf962",
              "parentUUID": "b6cf63d3-8097-4960-a9c8-554acb65bc73",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ab301918-2f86-44db-a1f1-e60ab408a5bf",
            "f6f0cdc7-96d9-4e21-bb40-cf0fa7cded5a",
            "9df67c8b-a81e-42da-b679-b8c22e00722b",
            "9d209a21-7ff6-4710-977d-4c58f91bf962"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1100,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bc194fd7-0eea-4454-b892-d20cb8884a53",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 689,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "2f90ec84-06b9-4a8a-b286-d110d2934887",
              "parentUUID": "bc194fd7-0eea-4454-b892-d20cb8884a53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 593,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "add04ae6-d90c-4aeb-8819-6ff6f9baf9db",
              "parentUUID": "bc194fd7-0eea-4454-b892-d20cb8884a53",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2f90ec84-06b9-4a8a-b286-d110d2934887",
            "add04ae6-d90c-4aeb-8819-6ff6f9baf9db"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1282,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cb1445e4-ad98-4621-8866-5817b90f3cc9",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 189,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "78001e5d-9007-424d-a1d6-8d83290bf502",
              "parentUUID": "cb1445e4-ad98-4621-8866-5817b90f3cc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 286,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "521ae544-596b-418d-889b-8df1911ada49",
              "parentUUID": "cb1445e4-ad98-4621-8866-5817b90f3cc9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "78001e5d-9007-424d-a1d6-8d83290bf502",
            "521ae544-596b-418d-889b-8df1911ada49"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 475,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "51ce660c-bc79-4572-85b2-47b0563520c5",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 681,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "6440c6a4-ac5d-4b96-b79e-afd6150713e3",
              "parentUUID": "51ce660c-bc79-4572-85b2-47b0563520c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9564,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "312be999-9e63-4c04-b372-271c6299b055",
              "parentUUID": "51ce660c-bc79-4572-85b2-47b0563520c5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6440c6a4-ac5d-4b96-b79e-afd6150713e3",
            "312be999-9e63-4c04-b372-271c6299b055"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10245,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8a665760-bacf-4159-a296-71f639105467",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2526,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "361f0008-b4af-44e6-bbfb-9e023ad6f483",
              "parentUUID": "8a665760-bacf-4159-a296-71f639105467",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9328,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "cb8af28a-a532-4951-96b8-b737225a5643",
              "parentUUID": "8a665760-bacf-4159-a296-71f639105467",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 2075,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "79a4fbab-b63e-4693-bbc1-b451af8442ad",
              "parentUUID": "8a665760-bacf-4159-a296-71f639105467",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "361f0008-b4af-44e6-bbfb-9e023ad6f483",
            "cb8af28a-a532-4951-96b8-b737225a5643",
            "79a4fbab-b63e-4693-bbc1-b451af8442ad"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13929,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "140a864f-83d4-4f3a-8e17-109c373c5104",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 362,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "f12e3c0d-d00b-4e77-9ba0-fa34696b4472",
              "parentUUID": "140a864f-83d4-4f3a-8e17-109c373c5104",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 165,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "9a5ea9b1-6c65-4262-ab00-ace9f5eb05f9",
              "parentUUID": "140a864f-83d4-4f3a-8e17-109c373c5104",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 197,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "0ca2866c-42ed-42c2-875c-16181f31b0e2",
              "parentUUID": "140a864f-83d4-4f3a-8e17-109c373c5104",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2637,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "cbb115e1-daaa-47c3-84b4-f75deba7c38e",
              "parentUUID": "140a864f-83d4-4f3a-8e17-109c373c5104",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f12e3c0d-d00b-4e77-9ba0-fa34696b4472",
            "9a5ea9b1-6c65-4262-ab00-ace9f5eb05f9",
            "0ca2866c-42ed-42c2-875c-16181f31b0e2",
            "cbb115e1-daaa-47c3-84b4-f75deba7c38e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3361,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "af16b97e-b8a6-4438-a002-1241b4a2f5a7",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4740,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38825/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38825/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38825/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38825/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38825/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38825/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38825/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38825/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38825/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38825/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38825/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38825/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38825/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e5342178-0524-47a2-9913-c492a78dd0c5",
              "parentUUID": "af16b97e-b8a6-4438-a002-1241b4a2f5a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4861,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:38825/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38825/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38825/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38825/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38825/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38825/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38825/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38825/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38825/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38825/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38825/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38825/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38825/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d427796c-b2d7-435e-880c-fcc554168b0c",
              "parentUUID": "af16b97e-b8a6-4438-a002-1241b4a2f5a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4703,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:38825/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38825/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38825/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38825/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38825/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38825/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38825/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38825/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38825/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38825/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38825/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38825/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38825/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8a8f5245-3a11-4ed4-bccc-8a21b932e7a6",
              "parentUUID": "af16b97e-b8a6-4438-a002-1241b4a2f5a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4756,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:38825/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38825/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38825/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38825/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38825/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38825/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38825/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38825/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38825/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38825/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38825/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38825/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38825/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "fbbf0455-ad25-4c6f-b5b3-3ab65ec891b1",
              "parentUUID": "af16b97e-b8a6-4438-a002-1241b4a2f5a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4839,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38825/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38825/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38825/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38825/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38825/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38825/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38825/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38825/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38825/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38825/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38825/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38825/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38825/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1cd0306d-e34a-4aed-aeee-169d0077bc06",
              "parentUUID": "af16b97e-b8a6-4438-a002-1241b4a2f5a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4901,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38825/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38825/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38825/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38825/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38825/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38825/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38825/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38825/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38825/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38825/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38825/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38825/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38825/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0c4a6ede-d5d5-4c75-8554-d18cea80287f",
              "parentUUID": "af16b97e-b8a6-4438-a002-1241b4a2f5a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4755,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:38825/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38825/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38825/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38825/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38825/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38825/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38825/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38825/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38825/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38825/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38825/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38825/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38825/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b2c28c57-2086-45d4-a28b-9ab06e1aeb1f",
              "parentUUID": "af16b97e-b8a6-4438-a002-1241b4a2f5a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4875,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38825/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38825/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38825/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38825/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38825/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38825/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38825/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38825/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38825/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38825/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38825/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38825/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38825/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2c8851dc-1b9d-4a0b-88b7-0098fd0c9bfb",
              "parentUUID": "af16b97e-b8a6-4438-a002-1241b4a2f5a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4863,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38825/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38825/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38825/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38825/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38825/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38825/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38825/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38825/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38825/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38825/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38825/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38825/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38825/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1d8dc48c-a9f9-4ef1-9122-4dc5fb602afa",
              "parentUUID": "af16b97e-b8a6-4438-a002-1241b4a2f5a7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e5342178-0524-47a2-9913-c492a78dd0c5",
            "d427796c-b2d7-435e-880c-fcc554168b0c",
            "8a8f5245-3a11-4ed4-bccc-8a21b932e7a6",
            "fbbf0455-ad25-4c6f-b5b3-3ab65ec891b1",
            "1cd0306d-e34a-4aed-aeee-169d0077bc06",
            "0c4a6ede-d5d5-4c75-8554-d18cea80287f",
            "b2c28c57-2086-45d4-a28b-9ab06e1aeb1f",
            "2c8851dc-1b9d-4a0b-88b7-0098fd0c9bfb",
            "1d8dc48c-a9f9-4ef1-9122-4dc5fb602afa"
          ],
          "pending": [],
          "skipped": [],
          "duration": 43293,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "687facfd-e143-43bd-8191-8ddac57deb96",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 5109,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38825/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38825/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38825/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38825/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38825/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38825/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38825/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38825/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38825/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38825/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38825/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38825/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38825/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "63b3c2e9-1b7a-4520-b32e-6baada260781",
              "parentUUID": "687facfd-e143-43bd-8191-8ddac57deb96",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4738,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38825/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38825/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38825/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38825/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38825/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38825/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38825/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38825/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38825/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38825/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38825/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38825/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38825/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "39123803-b65a-4861-99b4-ac9a686d4541",
              "parentUUID": "687facfd-e143-43bd-8191-8ddac57deb96",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4850,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38825/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38825/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38825/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38825/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38825/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38825/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38825/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38825/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38825/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38825/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38825/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38825/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38825/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "48c204e2-fcda-406a-b4db-34be94d6d270",
              "parentUUID": "687facfd-e143-43bd-8191-8ddac57deb96",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "63b3c2e9-1b7a-4520-b32e-6baada260781",
            "39123803-b65a-4861-99b4-ac9a686d4541",
            "48c204e2-fcda-406a-b4db-34be94d6d270"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14697,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "60ed2409-7a82-4787-8d64-a1e1ec15d8e9",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 1037,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:38825/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:38825/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:38825/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:38825/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:38825/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:38825/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:38825/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:38825/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38825/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38825/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:38825/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38825/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38825/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38825/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "cd6241a6-58e2-41b5-af36-2ed1fda06248",
              "parentUUID": "60ed2409-7a82-4787-8d64-a1e1ec15d8e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 987,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:38825/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:38825/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:38825/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:38825/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:38825/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:38825/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:38825/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:38825/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38825/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38825/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:38825/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38825/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38825/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38825/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "76cd1f12-e5ea-4b3c-99b9-076150f51ca2",
              "parentUUID": "60ed2409-7a82-4787-8d64-a1e1ec15d8e9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "cd6241a6-58e2-41b5-af36-2ed1fda06248",
            "76cd1f12-e5ea-4b3c-99b9-076150f51ca2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2024,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}